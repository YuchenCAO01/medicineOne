{"ast":null,"code":"import HeadBar from '../components/HeadBar.vue';\nimport api from '../api/index';\nexport default {\n  name: 'RegisterView',\n\n  data() {\n    return {\n      iswarning: false,\n      errorMessage: \"\",\n      emailMessage: \"\",\n      email: \"\",\n      code: \"\",\n      userName: \"\",\n      nickName: \"\",\n      pwd: \"\",\n      pwdRepeat: \"\",\n      headerStyle: \"Return\",\n      headerTitle: \"Register\",\n      keyWord: \"\"\n    };\n  },\n\n  components: {\n    HeadBar\n  },\n  methods: {\n    verifyButton() {\n      this.verifyCode();\n    },\n\n    verifyCode() {\n      var that = this;\n      const loading = this.openFullScreen2();\n      api.emailVerify(that.userName, that.email).then(function (response) {\n        // that.emailMessage = response.data.msg\n        loading.close();\n\n        if (response.data.status == 200) {\n          console.log(response.data);\n          ElNotification({\n            message: 'Verify code send out',\n            type: 'success',\n            duration: 5000\n          });\n        } else {\n          ElNotification({\n            message: 'Invalid email',\n            type: 'error',\n            duration: 5000\n          });\n        }\n      });\n    },\n\n    backToPrev() {\n      this.$router.back(-1);\n    },\n\n    confirmButton() {\n      var that = this;\n      console.log(this.iswarning);\n\n      if (that.iswarning == false) {\n        console.log(1);\n        this.registerUser();\n      } else {\n        ElNotification({\n          message: 'Input does not meet requirements.',\n          type: 'warning',\n          duration: 5000\n        });\n      }\n    },\n\n    registerUser() {\n      var that = this;\n\n      if (that.email.length < 1 || that.code.length < 1 || that.userName.length < 1 || that.nickName.length < 1 || that.pwd.length < 1 || that.pwdRepeat.length < 1) {\n        ElNotification({\n          message: 'Please complete all information!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else if (that.pwd.length <= 7) {\n        ElNotification({\n          message: 'The password must be at least 8 characters!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else if (that.pwd != that.pwdRepeat) {\n        ElNotification({\n          message: 'Password entries are inconsistent. Please enter again!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else {\n        const loading = this.openFullScreen2();\n        loading.close();\n        api.register(that.email, that.code, that.userName, that.nickName, that.pwd).then(function (response) {\n          if (response.data.status == 200) {\n            that.$router.push({\n              path: '/'\n            });\n            ElNotification({\n              message: 'Success!',\n              type: 'success',\n              duration: 5000\n            });\n          } else {\n            that.errorMessage = response.data.msg;\n            ElNotification({\n              message: that.errorMessage,\n              type: 'error',\n              duration: 5000\n            });\n          }\n        });\n      }\n    },\n\n    openFullScreen2() {\n      const loading = ElLoading.service({\n        lock: true,\n        text: 'Loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      }); // setTimeout(() => {\n      //   loading.close()\n      // }, 10000)\n\n      return loading;\n    }\n\n  },\n\n  mounted() {\n    this.displayDeskOnly = window.innerWidth > 992;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["HeadBar","api","name","data","iswarning","errorMessage","emailMessage","email","code","userName","nickName","pwd","pwdRepeat","headerStyle","headerTitle","keyWord","components","methods","verifyButton","verifyCode","that","loading","openFullScreen2","emailVerify","then","response","close","status","console","log","ElNotification","message","type","duration","backToPrev","$router","back","confirmButton","registerUser","length","register","push","path","msg","ElLoading","service","lock","text","background","mounted","displayDeskOnly","window","innerWidth"],"sourceRoot":"","sources":["/Users/yuchencao/C/CICD Learning/medicineOne/src/main/resources/medioneVUE/medicine-one/src/views/RegisterView.vue"],"sourcesContent":["/**\n/*\n* \n* @description: This view contains the register function\n*               fucntion about email verification, register a new user\n* @author: Tianjin zhao\n* @update: Tianjin zhao(2022-11-7 12:20)\n*\n*/\n<template>\n\t<div class=\"container\">\n\t\t<HeadBar :header=\"headerTitle\" :btnStyle=\"headerStyle\" class=\"phone_only\" @open-side-bar-event=\"openSideBar\"></HeadBar>\n\n\t\t\t<!--head bar phone only-->\n\t\t<div class=\"center_bar content_container\" style=\"margin-left: 0;\">\n\t\t\t<h3 class=\"desk_top_only\">Register</h3>\n\t\t\t<button @click=\"backToPrev\" class=\"return_button desktop_only\">\n\t\t\t\t<el-icon :size=30 color=\"#6E78F7\"><Back /></el-icon>\n\t\t\t</button>\n\t\t\t<table class=\"center_bar_content\">\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Username:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"text\" v-model.trim =\"userName\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Nickname:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"text\"  v-model.trim =\"nickName\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Set Password:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"password\"  v-model.trim =\"pwd\" class=\"input_area\"></p>\n\t\t\t\t\t<p class=\"warning\" v-if=\"iswarning\"> {{warningText}} </p>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Confirm New Password:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\t\t\t\t\t\n\t\t\t\t\t<p><input type=\"password\"  v-model.trim =\"pwdRepeat\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Email:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"text\" v-model.trim =\"email\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Verification Code:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"string\" v-model.trim =\"code\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"button\" class=\"purple_button\" value = \"Send Verify Code\" @click=\"verifyButton\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"submit\" value=\"Confirm\" class=\"purple_button\" @click= \"registerUser\"></p>\n\t\t\t\t</tr>\n\t\t\t\t\n\n\t\t\t</table>\n\t\t\t<!--Form send the user input register information to back end-->\n\n\t\t\t</div>\n\t\t<!--center bar-->\n\t</div>    \n</template>\n\n<script>\nimport HeadBar from '../components/HeadBar.vue';\nimport api from '../api/index';\n\n  export default {\n    name: 'RegisterView',\n    data() {\n      return {\n\t\t\t\tiswarning: false,\n\t\t\t\terrorMessage : \"\",\n        emailMessage : \"\",\n        email : \"\",\n\t\t\t\tcode : \"\",\n\t\t\t\tuserName : \"\",\n\t\t\t\tnickName : \"\",\n        pwd : \"\",\n\t\t\t\tpwdRepeat : \"\",\n\t\t\t\theaderStyle : \"Return\",\n\t\t\t\theaderTitle : \"Register\",\n\t\t\t\tkeyWord : \"\",\n      }\n    },\n    components: {\n\t\t\tHeadBar\n    },\n    methods: {\n      verifyButton(){\n\t\t\t\tthis.verifyCode()\n      },\n\t\t\tverifyCode(){\n\t\t\t\tvar that=this;\n\t\t\t\tconst loading = this.openFullScreen2();\n\t\t\t\tapi.emailVerify(that.userName, that.email).then(function(response){\n\t\t\t\t\t// that.emailMessage = response.data.msg\n\t\t\t\t\tloading.close()\n\t\t\t\t\tif (response.data.status == 200) {\n\t\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Verify code send out',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t}) \n\t\t\t\t\t} else {\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Invalid email',\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tbackToPrev(){\n\t\t\t\tthis.$router.back(-1)\n\t\t\t},\n\t\t\tconfirmButton(){\n\t\t\t\tvar that=this;\n\t\t\t\tconsole.log(this.iswarning)\n\t\t\t\tif (that.iswarning == false) {\n\t\t\t\t\tconsole.log(1)\n\t\t\t\t\tthis.registerUser()\n\t\t\t\t} else {\n\t\t\t\t\tElNotification({\n            message: 'Input does not meet requirements.',\n            type: 'warning',\n\t\t\t\t\t\tduration: 5000,\n          })\n\t\t\t\t}\n\t\t\t},\n      registerUser(){\n        var that=this;\n\t\t\t\tif(that.email.length < 1||that.code.length < 1||that.userName.length < 1||that.nickName.length < 1||that.pwd.length < 1||that.pwdRepeat.length < 1){\n\t\t\t\t\tElNotification({\n            message: 'Please complete all information!',\n            type: 'warning',\n\t\t\t\t\t\tduration: 5000,\n          })\n\t\t\t\t} else if (that.pwd.length <= 7) {\n\t\t\t\t\tElNotification({\n\t\t\t\t\t\tmessage: 'The password must be at least 8 characters!',\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t})\n\t\t\t\t} else if (that.pwd != that.pwdRepeat) {\n\t\t\t\t\tElNotification({\n\t\t\t\t\t\tmessage: 'Password entries are inconsistent. Please enter again!',\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst loading = this.openFullScreen2();\n\t\t\t\t\tloading.close()\n\t\t\t\t\tapi.register(that.email, that.code, that.userName, that.nickName, that.pwd).then(function(response){\n\t\t\t\t\tif(response.data.status == 200){\n            that.$router.push({path : '/'})\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Success!',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n          }\n          else{\n            that.errorMessage = response.data.msg\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: that.errorMessage,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n          }\n\t\t\t\t})\n\t\t\t\t}\n   \t\t},\n\t\t\topenFullScreen2(){\n\t\t\tconst loading = ElLoading.service({\n\t\t\t\tlock: true,\n\t\t\t\ttext: 'Loading',\n\t\t\t\tbackground: 'rgba(0, 0, 0, 0.7)',\n\t\t\t})\n\t\t\t// setTimeout(() => {\n\t\t\t//   loading.close()\n\t\t\t// }, 10000)\n\t\t\treturn loading\n\t\t},\n    },\n    mounted() {\n      this.displayDeskOnly = (window.innerWidth > 992)\n    }\n }\n\n</script>\n\n<style scoped src=\"../assets/library/css/background_and_center_bar.css\"></style>\n<style scoped src=\"../assets/library/css/desktop_base_format.css\"></style>\n<style scoped src=\"../assets/library/css/phone_base_format.css\"></style>\n<style scoped>\n@media screen and (min-width: 992px) {\n\t.center_bar {\n\t\twidth: 30%;\n\t}\n\t.input_area {\n\t\theight: 1.5em;\n\t\tmargin-bottom: -1em;\n\t}\n\t.center_bar_title {\n\t\tfont-size: 1em;\n\t}\n\t.desk_top_only {\n\t\tfont-size: 2em;\n\t\tmargin-bottom: -0.7em;\n\t}\n\t.return_button {\n\t\ttop: -1em;\n\t}\n\n}\n\n\n</style>"]},"metadata":{},"sourceType":"module"}