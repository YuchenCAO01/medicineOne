{"ast":null,"code":"import { ref, computed } from \"vue\";\nimport api from \"../api/index\";\nimport { Plus } from \"@element-plus/icons-vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport path from '../api/path';\nexport default {\n  name: \"KilaKilaUploader\",\n  emits: [\"uploaded\", \"aboutToUpload\", \"removed\"],\n  components: {\n    Plus,\n    VueEasyLightbox\n  },\n\n  setup(props, context) {\n    let progress = ref(0);\n    let isLightBoxVisible = ref(false);\n    let isProgressVisible = ref(false);\n    let isSuccessLabelVisible = ref(false);\n    let imageUrl = ref(\"\");\n    let localImageUrl = ref(\"\");\n    let index = ref(0);\n    let isThumbnailVisible = computed(() => localImageUrl.value.length > 0);\n\n    function openFileDialog() {\n      document.getElementById(\"file-input\").click();\n    }\n\n    function addImage() {\n      document.getElementById(\"file-input\").click();\n    }\n\n    function onImageAdded() {\n      let fileInput = document.getElementById(\"file-input\");\n\n      if (fileInput.files.length == 0) {\n        return;\n      }\n\n      context.emit(\"aboutToUpload\");\n      let file = fileInput.files[0];\n      setImageUrl(URL.createObjectURL(file));\n      console.log(URL.createObjectURL(file));\n      upload(file);\n    }\n\n    function setImageUrl(url) {\n      let thumbnailEl = document.getElementById(\"thumbnail\");\n      thumbnailEl.src = localImageUrl.value = url;\n    }\n\n    function handleThumbnailRemove(file) {\n      imageUrl.value = \"\";\n      localImageUrl.value = \"\";\n      context.emit(\"removed\", file);\n    }\n\n    function handleThumbnailPreview() {\n      isLightBoxVisible.value = true;\n    }\n\n    function handleLightboxHide() {\n      isLightBoxVisible.value = false;\n    }\n\n    function upload(file) {\n      progress.value = 0;\n      isProgressVisible.value = true;\n      isSuccessLabelVisible.value = false;\n      var baseUrl = path.baseUrl;\n      api.uploadImage(file, progress).then(res => {\n        // console.log(res)\n        // progress.value = 100;\n        // imageUrl.value = res.data.data.url;\n        // var requiredUrl = res.data.data.url\n        // console.log(\"upload success the url is \" + requiredUrl)\n        // // document.getElementById(\"thumbnail\").src = requiredUrl;\n        // context.emit(\"uploaded\", res.data.data.url);\n        // setTimeout(() => {\n        //     isProgressVisible.value = false;\n        //     isSuccessLabelVisible.value = true;\n        // }, 200);\n        // ElMessage({\n        //     message: 'Image uploaded',\n        //     type: 'success',\n        // })\n        console.log(res);\n\n        if (res.data.status == 200) {\n          progress.value = 100;\n          imageUrl.value = res.data.data;\n          var requiredUrl = imageUrl.value;\n          console.log(\"upload success the url is \" + requiredUrl); // document.getElementById(\"thumbnail\").src = requiredUrl;\n\n          context.emit(\"uploaded\", imageUrl.value);\n          setTimeout(() => {\n            isProgressVisible.value = false;\n            isSuccessLabelVisible.value = true;\n          }, 200); // ElMessage({\n          //     message: 'Image uploaded',\n          //     type: 'success',\n          // })\n\n          ElNotification({\n            title: 'Success',\n            message: 'Image uploaded',\n            type: 'success'\n          });\n        } else {\n          ElNotification({\n            title: 'Error',\n            message: \"Oops, image size exceeds its maximum permitted size of 1MB\",\n            type: 'error'\n          });\n        }\n      }, res => {\n        console.log(res);\n        isProgressVisible.value = false;\n        localImageUrl.value = \"\";\n        context.emit(\"uploaded\", \"\"); // ElMessage.error(\"Oops, uploaded failed\")\n\n        if (res.response.status == 500) {\n          ElNotification({\n            title: 'Error',\n            message: \"Oops, image size exceeds its maximum permitted size of 1MB\",\n            type: 'error'\n          });\n        } else {\n          ElNotification({\n            title: 'Error',\n            message: \"Oops, upload failed\",\n            type: 'error'\n          });\n        }\n      });\n    }\n\n    return {\n      progress,\n      imageUrl,\n      localImageUrl,\n      index,\n      isLightBoxVisible,\n      isThumbnailVisible,\n      isProgressVisible,\n      isSuccessLabelVisible,\n      handleThumbnailRemove,\n      handleThumbnailPreview,\n      handleLightboxHide,\n      openFileDialog,\n      onImageAdded,\n      setImageUrl,\n      addImage\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["ref","computed","api","Plus","VueEasyLightbox","path","name","emits","components","setup","props","context","progress","isLightBoxVisible","isProgressVisible","isSuccessLabelVisible","imageUrl","localImageUrl","index","isThumbnailVisible","value","length","openFileDialog","document","getElementById","click","addImage","onImageAdded","fileInput","files","emit","file","setImageUrl","URL","createObjectURL","console","log","upload","url","thumbnailEl","src","handleThumbnailRemove","handleThumbnailPreview","handleLightboxHide","baseUrl","uploadImage","then","res","data","status","requiredUrl","setTimeout","ElNotification","title","message","type","response"],"sourceRoot":"","sources":["/Users/yuchencao/C/CICD Learning/medicineOne/src/main/resources/medioneVUE/medicine-one/src/components/UploadImage.vue"],"sourcesContent":["/**\n/*\n* \n* @description: This component contains upload medicine image function\n* @author: Yuchen Cao\n* @update: Yuchen Cao (2022-11-1 10:16)\n*\n*/\n<template>\n    <div class=\"uploader\">\n        <!-- <el-button type=\"primary\" @click=\"addImage()\" style=\"margin-top : 2em ; margin-bottom : 1em\">Add Photo</el-button> -->\n        <input\n            type=\"file\"\n            id=\"file-input\"\n            \n            accept=\"image/*\"\n            @change=\"onImageAdded\"\n            style=\"display : none\"\n        />\n\n        <div\n            class=\"card upload-card\"\n            @click=\"openFileDialog\"\n            v-if=\"!isThumbnailVisible\"\n        >\n            <svg\n                class=\"icon\"\n                width=\"28\"\n                height=\"28\"\n                viewBox=\"0 0 1024 1024\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n            >\n                <path\n                    fill=\"#8c939d\"\n                    d=\"M480 480V128a32 32 0 0164 0v352h452a32 32 0 110 64H544v352a32 32 0 11-64 0V544H128a32 32 0 010-64h452z\"\n                ></path>\n            </svg>\n        </div>\n        <!-- <el-button type=\"primary\" @click=\"addImage()\" style=\"margin-top : 4em; margin-left : 1em\">Add Photo</el-button> -->\n\n        <div class=\"card thumbnail-card\" v-show=\"isThumbnailVisible\">\n            <img src=\"\" alt=\"thumbnail\" id=\"thumbnail\" />\n\n            <label class=\"success-label\" v-show=\"isSuccessLabelVisible\"\n                ><i class=\"success-icon\"\n                    ><svg\n                        class=\"icon\"\n                        width=\"12\"\n                        height=\"12\"\n                        viewBox=\"0 0 1024 1024\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fill=\"white\"\n                            d=\"M406.656 706.944L195.84 496.256a32 32 0 10-45.248 45.248l256 256 512-512a32 32 0 00-45.248-45.248L406.592 706.944z\"\n                        ></path></svg\n                ></i>\n            </label>\n\n            <!-- 图标 -->\n            <div class=\"thumbnail-actions\">\n                <span class=\"thumbnail-preview\" @click=\"handleThumbnailPreview\">\n                    <svg\n                        class=\"icon\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 1024 1024\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fill=\"white\"\n                            d=\"M795.904 750.72l124.992 124.928a32 32 0 01-45.248 45.248L750.656 795.904a416 416 0 1145.248-45.248zM480 832a352 352 0 100-704 352 352 0 000 704zm-32-384v-96a32 32 0 0164 0v96h96a32 32 0 010 64h-96v96a32 32 0 01-64 0v-96h-96a32 32 0 010-64h96z\"\n                        ></path>\n                    </svg>\n                </span>\n\n                <span class=\"thumbnail-delete\" @click=\"handleThumbnailRemove\">\n                    <svg\n                        class=\"icon\"\n                        width=\"20\"\n                        height=\"20\"\n                        viewBox=\"0 0 1024 1024\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                        <path\n                            fill=\"white\"\n                            d=\"M160 256H96a32 32 0 010-64h356V95.936a32 32 0 0132-32h356a32 32 0 0132 32V192h356a32 32 0 110 64h-64v672a32 32 0 01-32 32H192a32 32 0 01-32-32V256zm448-64v-64H416v64h292zM224 896h676V256H224v640zm192-128a32 32 0 01-32-32V416a32 32 0 0164 0v320a32 32 0 01-32 32zm192 0a32 32 0 01-32-32V416a32 32 0 0164 0v320a32 32 0 01-32 32z\"\n                        ></path>\n                    </svg>\n                </span>\n            </div>\n\n            <!-- 进度条 -->\n            <el-progress\n                type=\"circle\"\n                :percentage=\"progress\"\n                v-show=\"isProgressVisible\"\n                :width=\"110\"\n                id=\"progress\"\n            />\n\n            <el-button type=\"primary\" @click=\"addImage()\" style=\"margin-top : 4em; margin-left : 1em\">Add Photo</el-button>\n        </div>\n\n        <vue-easy-lightbox\n            moveDisabled\n            :visible=\"isLightBoxVisible\"\n            :imgs=\"localImageUrl\"\n            :index=\"index\"\n            @hide=\"handleLightboxHide\"\n        />\n    </div>\n</template>\n\n<script>\nimport { ref, computed } from \"vue\";\nimport api from \"../api/index\";\nimport { Plus } from \"@element-plus/icons-vue\";\nimport VueEasyLightbox from \"vue-easy-lightbox\";\nimport path from '../api/path';\n\nexport default {\n    name: \"KilaKilaUploader\",\n    emits: [\"uploaded\", \"aboutToUpload\", \"removed\"],\n    components: { Plus, VueEasyLightbox },\n    setup(props, context) {\n        let progress = ref(0);\n        let isLightBoxVisible = ref(false);\n        let isProgressVisible = ref(false);\n        let isSuccessLabelVisible = ref(false);\n        let imageUrl = ref(\"\");\n        let localImageUrl = ref(\"\");\n        let index = ref(0);\n\n        let isThumbnailVisible = computed(() => localImageUrl.value.length > 0);\n\n        function openFileDialog() {\n            document.getElementById(\"file-input\").click();\n        }\n\n        function addImage() {\n            document.getElementById(\"file-input\").click();\n        }\n\n        function onImageAdded() {\n            let fileInput = document.getElementById(\"file-input\");\n            if (fileInput.files.length == 0) {\n                return;\n            }\n\n            context.emit(\"aboutToUpload\");\n            let file = fileInput.files[0];\n            setImageUrl(URL.createObjectURL(file));\n            console.log(URL.createObjectURL(file))\n            upload(file);\n        }\n\n        function setImageUrl(url) {\n            let thumbnailEl = document.getElementById(\"thumbnail\");\n            thumbnailEl.src = localImageUrl.value = url;\n        }\n\n        function handleThumbnailRemove(file) {\n            imageUrl.value = \"\";\n            localImageUrl.value = \"\";\n            context.emit(\"removed\", file);\n        }\n\n        function handleThumbnailPreview() {\n            isLightBoxVisible.value = true;\n        }\n\n        function handleLightboxHide() {\n            isLightBoxVisible.value = false;\n        }\n\n        function upload(file) {\n            progress.value = 0;\n            isProgressVisible.value = true;\n            isSuccessLabelVisible.value = false;\n            var baseUrl = path.baseUrl\n\n            api.uploadImage(file, progress).then(\n                (res) => {\n                    // console.log(res)\n                    // progress.value = 100;\n                    // imageUrl.value = res.data.data.url;\n                    // var requiredUrl = res.data.data.url\n                    // console.log(\"upload success the url is \" + requiredUrl)\n                    // // document.getElementById(\"thumbnail\").src = requiredUrl;\n                    // context.emit(\"uploaded\", res.data.data.url);\n                    // setTimeout(() => {\n                    //     isProgressVisible.value = false;\n                    //     isSuccessLabelVisible.value = true;\n                    // }, 200);\n                    // ElMessage({\n                    //     message: 'Image uploaded',\n                    //     type: 'success',\n                    // })\n\n                    console.log(res)\n                    if(res.data.status == 200){\n                         progress.value = 100;\n                        imageUrl.value = res.data.data;\n                        var requiredUrl = imageUrl.value \n                        console.log(\"upload success the url is \" + requiredUrl)\n                        // document.getElementById(\"thumbnail\").src = requiredUrl;\n                        context.emit(\"uploaded\", imageUrl.value);\n                        setTimeout(() => {\n                            isProgressVisible.value = false;\n                            isSuccessLabelVisible.value = true;\n                        }, 200);\n                        // ElMessage({\n                        //     message: 'Image uploaded',\n                        //     type: 'success',\n                        // })\n                        ElNotification({\n                            title: 'Success',\n                            message: 'Image uploaded',\n                            type: 'success',\n                        })\n                    } else {\n                        ElNotification({\n                        title: 'Error',\n                        message: \"Oops, image size exceeds its maximum permitted size of 1MB\",\n                        type: 'error',\n                    })\n                    }\n                   \n                },\n                (res) => {\n                    console.log(res)\n                    isProgressVisible.value = false;\n                    localImageUrl.value = \"\";\n                    context.emit(\"uploaded\", \"\");\n                    // ElMessage.error(\"Oops, uploaded failed\")\n                    if(res.response.status == 500){\n                        ElNotification({\n                            title: 'Error',\n                            message: \"Oops, image size exceeds its maximum permitted size of 1MB\",\n                            type: 'error',\n                        })\n                    } else {\n                        ElNotification({\n                            title: 'Error',\n                            message: \"Oops, upload failed\",\n                            type: 'error',\n                        })\n                    }\n\n                }\n            );\n        }\n\n        return {\n            progress,\n            imageUrl,\n            localImageUrl,\n            index,\n            isLightBoxVisible,\n            isThumbnailVisible,\n            isProgressVisible,\n            isSuccessLabelVisible,\n            handleThumbnailRemove,\n            handleThumbnailPreview,\n            handleLightboxHide,\n            openFileDialog,\n            onImageAdded,\n            setImageUrl,\n            addImage,\n        };\n    },\n};\n</script>\n\n<style scoped>\n.uploader {\n    display: flex;\n  }\n  .card {\n    background-color: #fbfdff;\n    border: 1px dashed #c0ccda;\n    border-radius: 6px;\n    width: 148px;\n    height: 148px;\n    overflow: hidden;\n  }\n  .upload-card {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.3s;\n    cursor: pointer;\n  }\n  .upload-card:hover {\n    border-color: #409eff;\n    color: #409eff;\n  }\n  .thumbnail-card {\n    border: 1px solid #c0ccda;\n    position: relative;\n  }\n  .thumbnail-card #thumbnail {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n    display: inline;\n  }\n  .thumbnail-card .success-label {\n    position: absolute;\n    right: -15px;\n    top: -6px;\n    width: 40px;\n    height: 24px;\n    background: #67c23a;\n    text-align: center;\n    transform: rotate(45deg);\n    box-shadow: 0 0 1pc 1px #0003;\n  }\n  .thumbnail-card .success-label .success-icon {\n    position: absolute;\n    left: 13px;\n    top: 1px;\n    transform: rotate(-45deg);\n  }\n  .thumbnail-card #progress {\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(255, 255, 255, 0.7);\n  }\n  .thumbnail-card #progress :deep(.el-progress-circle) {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n  .thumbnail-card .thumbnail-actions {\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    transition: all 0.4s ease;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    border-radius: 6px;\n  }\n  .thumbnail-card .thumbnail-actions .thumbnail-preview,\n  .thumbnail-card .thumbnail-actions .thumbnail-delete {\n    cursor: pointer;\n    margin: 0 8px;\n    display: inline-block;\n  }\n  .thumbnail-card .thumbnail-actions:hover {\n    opacity: 1;\n  }\n  :deep(.vel-img) {\n    box-shadow: 0 5px 20px 2px rgba(0, 0, 0, 0.35);\n  }\n</style>"]},"metadata":{},"sourceType":"module"}