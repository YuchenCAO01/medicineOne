{"ast":null,"code":"import HeadBar from '../components/HeadBar.vue';\nimport api from '../api/index';\nexport default {\n  name: 'RegisterView',\n\n  data() {\n    return {\n      // displayFlag : false,\n      // displayDeskOnly: true,\n      iswarning: false,\n      errorMessage: \"\",\n      warningText: \"\",\n      email: \"\",\n      code: \"\",\n      pwd: \"\",\n      pwdRepeat: \"\",\n      headerStyle: \"Return\"\n    };\n  },\n\n  components: {\n    HeadBar\n  },\n  methods: {\n    verifyButton() {\n      this.verifyCode();\n    },\n\n    verifyCode() {\n      var that = this;\n      const loading = this.openFullScreen2();\n      api.emailVerify(that.userName, that.email).then(function (response) {\n        loading.close();\n\n        if (response.data.status == 200) {\n          console.log(response.data);\n          ElNotification({\n            message: 'Verify code send out',\n            type: 'success',\n            duration: 5000\n          });\n        } else {\n          ElNotification({\n            message: 'Invalid email',\n            type: 'error',\n            duration: 5000\n          });\n        }\n      });\n    },\n\n    backToPrev() {\n      this.$router.back(-1);\n    },\n\n    confirmButton() {\n      this.isEmpty();\n    },\n\n    resetPassword() {\n      var that = this;\n\n      if (that.email.length < 1 || that.code.length < 1 || that.pwd.length < 1 || that.pwdRepeat.length < 1) {\n        ElNotification({\n          message: 'You must complete all information!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else if (that.pwd.length <= 7) {\n        ElNotification({\n          message: 'The password must be at least 8 characters!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else if (that.pwd != that.pwdRepeat) {\n        ElNotification({\n          message: 'The two password are inconsistent!',\n          type: 'warning',\n          duration: 5000\n        });\n      } else {\n        const loading = this.openFullScreen2();\n        api.resetPassward(that.email, that.code, that.pwd).then(function (response) {\n          loading.close();\n\n          if (response.data.status == 200) {\n            that.$router.push({\n              path: '/'\n            });\n            ElNotification({\n              message: 'Success!',\n              type: 'success',\n              duration: 5000\n            });\n          } else {\n            that.errorMessage = response.data.msg;\n            ElNotification({\n              message: that.errorMessage,\n              type: 'error',\n              duration: 5000\n            });\n          }\n        });\n      }\n    },\n\n    openFullScreen2() {\n      const loading = ElLoading.service({\n        lock: true,\n        text: 'Loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      }); // setTimeout(() => {\n      //   loading.close()\n      // }, 10000)\n\n      return loading;\n    }\n\n  },\n\n  mounted() {\n    this.displayDeskOnly = window.innerWidth > 992;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["HeadBar","api","name","data","iswarning","errorMessage","warningText","email","code","pwd","pwdRepeat","headerStyle","components","methods","verifyButton","verifyCode","that","loading","openFullScreen2","emailVerify","userName","then","response","close","status","console","log","ElNotification","message","type","duration","backToPrev","$router","back","confirmButton","isEmpty","resetPassword","length","resetPassward","push","path","msg","ElLoading","service","lock","text","background","mounted","displayDeskOnly","window","innerWidth"],"sourceRoot":"","sources":["/Users/yuchencao/C/CICD Learning/medicineOne/src/main/resources/medioneVUE/medicine-one/src/views/ResetPasswordView.vue"],"sourcesContent":["/**\n/*\n* \n* @description: This view contains the reset password function\n*               fucntion about reset password, email verification\n* @author: Tianjin zhao\n* @update: Tianjin zhao(2022-11-7 15:24)\n*\n*/\n<template>\n\t<div class=\"container\">\n\t\t<HeadBar :header=\"headerTitle\" :btnStyle=\"headerStyle\" class=\"phone_only\" @open-side-bar-event=\"openSideBar\"></HeadBar>\n\n\t\t\t<!--head bar phone only-->\n\t\t<div class=\"center_bar content_container\" style=\"margin-left: 0;\">\n\t\t\t<h3 class=\"desk_top_only\">Reset Password</h3>\n\t\t\t<button @click=\"backToPrev\" class=\"return_button desktop_only\">\n\t\t\t\t<el-icon :size=30 color=\"#6E78F7\"><Back /></el-icon>\n\t\t\t</button>\n\t\t\t<table class=\"center_bar_content\">\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Email:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"text\" v-model.trim =\"email\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Verification Code:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"string\" v-model.trim =\"code\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Set Password:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"password\"  v-model.trim =\"pwd\" class=\"input_area\"></p>\n\t\t\t\t\t<p class=\"warning\" v-if=\"iswarning\"> {{warningText}} </p>\n\t\t\t\t</tr>\n\n\t\t\t\t<tr class=\"center_bar_label\">\n\t\t\t\t\t<label class=\"center_bar_title\">Confirm New Password:</label>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\t\t\t\t\t\n\t\t\t\t\t<p><input type=\"password\"  v-model.trim =\"pwdRepeat\" class=\"input_area\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"button\" class=\"purple_button\" value = \"Send Verify Code\" @click=\"verifyButton\"></p>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<p><input type=\"submit\" value=\"Confirm\" class=\"purple_button\" @click= \"resetPassword\"></p>\n\t\t\t\t</tr>\n\t\t\t\t\n\n\t\t\t</table>\n\t\t\t<!--Form send the user input register information to back end-->\n\n\t\t\t</div>\n\t\t<!--center bar-->\n\t</div>    \n</template>\n\n<script>\nimport HeadBar from '../components/HeadBar.vue';\nimport api from '../api/index';\n\n  export default {\n    name: 'RegisterView',\n    data() {\n      return {\n        // displayFlag : false,\n        // displayDeskOnly: true,\n\t\t\t\tiswarning: false,\n\t\t\t\terrorMessage : \"\",\n        warningText : \"\",\n        email : \"\",\n\t\t\t\tcode : \"\",\n        pwd : \"\",\n\t\t\t\tpwdRepeat : \"\",\n\t\t\t\theaderStyle : \"Return\",\n      }\n    },\n    components: {\n\t\t\tHeadBar\n    },\n    methods: {\n      verifyButton(){\n\t\t\t\tthis.verifyCode()\n      },\n\t\t\tverifyCode(){\n\t\t\t\tvar that=this;\n\t\t\t\tconst loading = this.openFullScreen2();\n\t\t\t\tapi.emailVerify(that.userName, that.email).then(function(response){\n\t\t\t\t\tloading.close()\n\t\t\t\t\tif (response.data.status == 200) {\n\t\t\t\t\t\tconsole.log(response.data)\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Verify code send out',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t}) \n\t\t\t\t\t} else {\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Invalid email',\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n\t\t\t\t\t}  \n\t\t\t\t})\n\t\t\t},\n\t\t\tbackToPrev(){\n\t\t\t\tthis.$router.back(-1)\n\t\t\t},\n\t\t\tconfirmButton(){\n\t\t\t\tthis.isEmpty()\n\t\t\t},\n\t\t\tresetPassword(){\t\t\n        var that=this;\n\t\t\t\tif(that.email.length < 1||that.code.length < 1||that.pwd.length < 1||that.pwdRepeat.length < 1){\n\t\t\t\t\tElNotification({\n            message: 'You must complete all information!',\n            type: 'warning',\n\t\t\t\t\t\tduration: 5000,\n          })\n\t\t\t\t} else if (that.pwd.length <= 7) {\n\t\t\t\t\tElNotification({\n\t\t\t\t\t\tmessage: 'The password must be at least 8 characters!',\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t})\n\t\t\t\t} else if (that.pwd != that.pwdRepeat) {\n\t\t\t\t\tElNotification({\n\t\t\t\t\t\tmessage: 'The two password are inconsistent!',\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconst loading = this.openFullScreen2();\n\t\t\t\t\tapi.resetPassward(that.email, that.code, that.pwd).then(function(response){\n\t\t\t\t\tloading.close()\n\t\t\t\t\tif(response.data.status == 200){\n            that.$router.push({path : '/'})\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: 'Success!',\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n          }\n          else{\n            that.errorMessage = response.data.msg\n\t\t\t\t\t\tElNotification({\n\t\t\t\t\t\t\tmessage: that.errorMessage,\n\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\tduration: 5000,\n\t\t\t\t\t\t})\n          }\n\t\t\t\t})\n\t\t\t\t}\n   \t\t},\n\t\t\topenFullScreen2(){\n\t\t\t\tconst loading = ElLoading.service({\n\t\t\t\t\tlock: true,\n\t\t\t\t\ttext: 'Loading',\n\t\t\t\t\tbackground: 'rgba(0, 0, 0, 0.7)',\n\t\t\t\t})\n\t\t\t\t// setTimeout(() => {\n\t\t\t\t//   loading.close()\n\t\t\t\t// }, 10000)\n\t\t\t\treturn loading\n\t\t\t},\n    },\n\n    mounted() {\n      this.displayDeskOnly = (window.innerWidth > 992)\n    }\n }\n\n</script>\n\n<style scoped src=\"../assets/library/css/background_and_center_bar.css\"></style>\n<style scoped src=\"../assets/library/css/desktop_base_format.css\"></style>\n<style scoped src=\"../assets/library/css/phone_base_format.css\"></style>\n<style scoped>\n@media screen and (min-width: 992px) {\n\t.center_bar {\n\t\twidth: 37%;\n\t}\n\t.desk_top_only {\n\t\tfont-size: 2.2em;\n\t\tmargin-bottom: -0.7em;\n\t}\n\t.return_button {\n\t\ttop: -1.5em;\n\t}\n\t.input_area {\n\t\tmargin-left: -0.5em;\n\t}\n\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}