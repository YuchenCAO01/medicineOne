{"ast":null,"code":"import axios from '../utils/request';\nimport path from './path';\nimport axios2 from \"../utils/request2\"; // Encapsulation of backend API request\n\nconst api = {\n  login(username, pwd) {\n    var userinfo = {\n      'username': username,\n      'password': pwd\n    };\n    return axios.post(path.baseUrl + path.login, userinfo);\n  },\n\n  emailVerify(userName, email) {\n    var emailinfo = {\n      'username': userName,\n      'email': email\n    };\n    return axios.post(path.baseUrl + path.email, emailinfo);\n  },\n\n  register(email, code, userName, nickName, pwd) {\n    var registerinfo = {\n      'email': email,\n      'code': code,\n      'username': userName,\n      'nickname': nickName,\n      'password': pwd\n    };\n    return axios.post(path.baseUrl + path.register, registerinfo);\n  },\n\n  resetPassward(email, code, pwd) {\n    var passwordinfo = {\n      'email': email,\n      'code': code,\n      'password': pwd\n    };\n    return axios.post(path.baseUrl + path.resetPassword, passwordinfo);\n  },\n\n  getUserData() {\n    console.log(\"Getting User data axios\");\n    return axios.get(path.baseUrl + path.dashboard);\n  },\n\n  getPageData(curpage, pagesize) {\n    console.log(path.baseUrl + path.pagination + \"/\" + curpage + \"/\" + pagesize);\n    return axios.get(path.baseUrl + path.pagination + \"/\" + curpage + \"/\" + pagesize);\n  },\n\n  accurateSearch(mediname, location) {\n    return axios.get(path.baseUrl + path.search + mediname + '/' + location);\n  },\n\n  blurrySearch(mediname) {\n    return axios.get(path.baseUrl + path.search + mediname);\n  },\n\n  getMediInfo(id) {\n    return axios.get(path.baseUrl + path.getMedicine + id);\n  },\n\n  getMediNote(id) {\n    return axios.get(path.baseUrl + path.getNote + id);\n  },\n\n  addMediNote(id, mediNote) {\n    var noteinfo = {\n      'note': mediNote\n    };\n    return axios.put(path.baseUrl + path.addNote + id, noteinfo);\n  },\n\n  takeMedicine(id, amount) {\n    return axios.get(path.baseUrl + path.takeMedicine + id + '/' + amount);\n  },\n\n  deleteMedicine(id) {\n    return axios.delete(path.baseUrl + path.deleteMedicine + id);\n  },\n\n  addLocation(locInfo) {\n    console.log(locInfo);\n    return axios.post(path.baseUrl + path.addLocation, locInfo);\n  },\n\n  deleteLocation(locInfo) {\n    console.log(locInfo);\n    return axios.delete(path.baseUrl + path.delLocation + '/' + locInfo.locationid);\n  },\n\n  getFDAData(brandname) {\n    return axios.get(\"https://api.fda.gov/drug/label.json?search=openfda.brand_name:\\\"\" + brandname + \"\\\"&limit=1\", {\n      withCredentials: false\n    });\n  },\n\n  uploadImage(file, progress) {\n    // const config = {\n    //   onUploadProgress(event) {\n    //     let v = Math.round(event.loaded / event.total * 100)\n    //     progress.value = v == 100 ? 80 : v\n    //   },\n    //   headers : {\n    //     'Content-Type' : 'multipart/form-data',\n    //     Authorization  : 'dqOfd2mnoSAKmByqw73K1hVlya5JhpcT' \n    //   }\n    // }\n    // const forms = new FormData()\n    // forms.append('smfile', file)\n    // // return axios2.post('/proxy/api/v2/upload', forms, config)\n    // return axios2.post('https://sm.ms/api/v2/upload', forms, config)\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return axios({\n      url: path.baseUrl + path.addMedicine + path.uploadImage,\n      method: \"post\",\n      data: {\n        image: file\n      },\n\n      onUploadProgress(event) {\n        let v = Math.round(event.loaded / event.total * 100);\n        progress.value = v == 100 ? 80 : v;\n      },\n\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n\n  // addMedicine(form){\n  //   return axios.post(path.baseUrl + path.addMedicine, form)\n  // }\n  addMedicine(form) {\n    // Convert the date to DD-MM-YYYY format\n    console.log(form.validity);\n\n    if (form.validity) {\n      const dateParts = form.validity.split('-'); // Assuming the date is in YYYY-MM-DD format\n\n      form.validity = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    } // Then, send the POST request with the formatted form\n\n\n    return axios.post(path.baseUrl + path.addMedicine, form);\n  }\n\n};\nexport default api;","map":{"version":3,"names":["axios","path","axios2","api","login","username","pwd","userinfo","post","baseUrl","emailVerify","userName","email","emailinfo","register","code","nickName","registerinfo","resetPassward","passwordinfo","resetPassword","getUserData","console","log","get","dashboard","getPageData","curpage","pagesize","pagination","accurateSearch","mediname","location","search","blurrySearch","getMediInfo","id","getMedicine","getMediNote","getNote","addMediNote","mediNote","noteinfo","put","addNote","takeMedicine","amount","deleteMedicine","delete","addLocation","locInfo","deleteLocation","delLocation","locationid","getFDAData","brandname","withCredentials","uploadImage","file","progress","formData","FormData","append","url","addMedicine","method","data","image","onUploadProgress","event","v","Math","round","loaded","total","value","headers","form","validity","dateParts","split"],"sources":["/Users/yuchencao/C/CICD Learning/medicineOne/src/main/resources/medioneVUE/medicine-one/src/api/index.js"],"sourcesContent":["import axios from '../utils/request'\nimport path from './path'\nimport axios2 from \"../utils/request2\"\n\n// Encapsulation of backend API request\nconst api = {\n  login(username, pwd){\n    var userinfo = {\n      'username':username,  \n      'password':pwd,\n    };\n    return axios.post(path.baseUrl + path.login, userinfo)\n  },\n  emailVerify(userName, email){\n    var emailinfo = {\n      'username' : userName,\n      'email' : email\n    }\n    return axios.post(path.baseUrl + path.email, emailinfo)\n  },\n  register(email, code, userName, nickName, pwd){\n    var registerinfo = {\n      'email': email,\n      'code': code,\n      'username': userName,\n      'nickname': nickName,\n      'password': pwd,\n    };\n    return axios.post(path.baseUrl + path.register, registerinfo)\n  },\n  resetPassward(email, code, pwd){\n    var passwordinfo = {\n      'email': email,\n      'code': code,\n      'password': pwd,\n    };\n    return axios.post(path.baseUrl + path.resetPassword, passwordinfo)\n  },\n  getUserData(){\n    console.log(\"Getting User data axios\")\n    return axios.get(path.baseUrl + path.dashboard)\n  },\n  getPageData(curpage, pagesize){\n    console.log(path.baseUrl + path.pagination + \"/\" + curpage + \"/\" + pagesize)\n    return axios.get(path.baseUrl + path.pagination + \"/\" + curpage + \"/\" + pagesize)\n  },\n  accurateSearch(mediname, location){\n    return axios.get(path.baseUrl + path.search + mediname + '/' + location)\n  },\n  blurrySearch(mediname){\n    return axios.get(path.baseUrl + path.search + mediname)\n  },\n  getMediInfo(id){\n    return axios.get(path.baseUrl + path.getMedicine + id )\n  },\n  getMediNote(id){\n    return axios.get(path.baseUrl + path.getNote + id )\n  },\n  addMediNote(id, mediNote){\n    var noteinfo = {\n      'note' : mediNote,\n    }\n    return axios.put(path.baseUrl + path.addNote + id, noteinfo)\n  },\n  takeMedicine(id, amount){\n    return axios.get(path.baseUrl + path.takeMedicine + id + '/' + amount)\n  },\n  deleteMedicine(id) {\n    return axios.delete(path.baseUrl + path.deleteMedicine + id)\n  },\n  addLocation(locInfo){\n    console.log(locInfo)\n    return axios.post(path.baseUrl + path.addLocation, locInfo)\n  },\n  deleteLocation(locInfo){\n    console.log(locInfo)\n    return axios.delete(path.baseUrl + path.delLocation + '/' + locInfo.locationid )\n  },\n  getFDAData(brandname){\n    return axios.get(\"https://api.fda.gov/drug/label.json?search=openfda.brand_name:\\\"\" + brandname + \"\\\"&limit=1\", {withCredentials: false})\n  },\n  uploadImage(file, progress){\n    // const config = {\n    //   onUploadProgress(event) {\n    //     let v = Math.round(event.loaded / event.total * 100)\n    //     progress.value = v == 100 ? 80 : v\n    //   },\n    \n    //   headers : {\n    //     'Content-Type' : 'multipart/form-data',\n    //     Authorization  : 'dqOfd2mnoSAKmByqw73K1hVlya5JhpcT' \n    //   }\n    // }\n    // const forms = new FormData()\n    // forms.append('smfile', file)\n    // // return axios2.post('/proxy/api/v2/upload', forms, config)\n    // return axios2.post('https://sm.ms/api/v2/upload', forms, config)\n\n    let formData = new FormData();\n    formData.append(\"file\", file)\n    return axios({\n        url: path.baseUrl + path.addMedicine + path.uploadImage,\n        method: \"post\",\n        data: {image : file},\n        onUploadProgress(event) {\n            let v = Math.round(event.loaded / event.total * 100)\n            progress.value = v == 100 ? 80 : v\n        },\n        \n        headers : {'Content-Type' : 'multipart/form-data'}\n  \n    })\n\n  },\n  // addMedicine(form){\n  //   return axios.post(path.baseUrl + path.addMedicine, form)\n  // }\n  addMedicine(form) {\n    // Convert the date to DD-MM-YYYY format\n    console.log(form.validity)\n    if (form.validity) {\n        const dateParts = form.validity.split('-'); // Assuming the date is in YYYY-MM-DD format\n        form.validity = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    }\n\n    // Then, send the POST request with the formatted form\n    return axios.post(path.baseUrl + path.addMedicine, form);\n  }\n\n}\nexport default api\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}